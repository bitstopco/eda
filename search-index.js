crystal_doc_search_index_callback({"repository_name":"github.com/onyxframework/event","body":"<a href=\"https://onyxframework.org\"><img align=\"right\" width=\"147\" height=\"147\" src=\"https://onyxframework.org/img/logo.svg\"></a>\n\n# Onyx::Event\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Travis CI build](https://img.shields.io/travis/onyxframework/event/master.svg?style=flat-square)](https://travis-ci.org/onyxframework/event)\n[![Docs](https://img.shields.io/badge/docs-online-brightgreen.svg?style=flat-square)](https://docs.onyxframework.org/event)\n[![API docs](https://img.shields.io/badge/api_docs-online-brightgreen.svg?style=flat-square)](https://api.onyxframework.org/event)\n[![Latest release](https://img.shields.io/github/release/onyxframework/event.svg?style=flat-square)](https://github.com/onyxframework/event/releases)\n\nAn [Event-Driven Architecture](https://en.wikipedia.org/wiki/Event-driven_architecture) framework for [Crystal](https://crystal-lang.org).\n\n## About\n\n`Onyx::Event` brings the [Event-Driven Architecture](https://en.wikipedia.org/wiki/Event-driven_architecture) to the [Crystal Language](https://crystal-lang.org), making it possible to build event-driven applications fast. It allows to emit events and attach subscribers (and also consumers) to these events, via multiple channels.\n\n### Features comparison\n\nOnyx Framework is an [open-core software](https://en.wikipedia.org/wiki/Open-core_model), which ensures its long-term support and development. Purchasing a commercial license gives you a Github team membership with an access to private repositories containing extra features and also an access to private [Twist](https://twist.com) team for extened support. Read more at [Commercial FAQ](https://docs.onyxframework.com/faq).\n\nFeature | Open Source (this repo) | Pro | Enterprise\n--- | :---: | :---: | :---:\n[Subscribers](https://docs.onyxframework.org/event/subscriptions) | ✔ | ✔ | ✔\n[Memory channel](https://docs.onyxframework.org/event/channel/memory) | ✔ | ✔ | ✔\n[Redis channel](https://docs.onyxframework.org/event/channel/redis) | ✔ | ✔ | ✔\n[Consumers](https://docs.onyxframework.com/event/consumers) | ✘ | ✔ | ✔\n[Redis store](https://docs.onyxframework.com/event/store/redis) | ✘ | ✔ | ✔\n[DB store](https://docs.onyxframework.com/event/store/db) | ✘ | ✔ | ✔\n[Kafka channel](https://docs.onyxframework.com/event/channel/kafka) | ✘ | ✘ | ✔\n[RabbitMQ channel](https://docs.onyxframework.com/event/channel/rabbitmq) | ✘ | ✘ | ✔\n[On-demand custom channels](https://docs.onyxframework.com/event/channel/custom) | ✘ | ✘ | ✔\n[On-demand custom stores](https://docs.onyxframework.org/event/store/custom) | ✘ | ✘ | ✔\n**License** | [BSD 3-Clause](LICENSE) | [Commercial](https://docs.onyxframework.com/licensing/pro) | [Custom](https://docs.onyxframework.com/licensing/enterprise)\n**Price** | Free | ~~$100~~ $50/month\\* | [Contact us](mailto:enterprise@onyxframework.com)\n\n*\\* A 50% discount is applicable until version 1.0 of this software.*\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```diff\ndependencies:\n+   onyx-event:\n+     github: onyxframework/event\n+     version: ~> 0.0.1\n```\n\nThis shard follows [Semantic Versioning v2.0.0](http://semver.org/), so check [releases](https://github.com/onyxframework/event/releases) and change the `version` accordingly. Please visit [github.com/crystal-lang/shards](https://github.com/crystal-lang/shards) to know more about Crystal shards.\n\n## Usage\n\n### Documentation\n\nFor a deeper information on usage, please visit:\n\n* [docs.onyxframework.org/event](https://docs.onyxframework.org/event) — handcrafted documentation and guides\n* [api.onyxframework.org/event](https://api.onyxframework.org/event) — auto-generated API documentation\n\n### Example\n\nFirst of all, define some events for your application:\n\n```crystal\nrequire \"onyx-event\"\n\nstruct MyEvent < Onyx::Event\n  getter foo\n\n  def initialize(@foo : String)\n  end\nend\n```\n\n<p align=\"right\"><sup><code>event.cr</code></sup></p>\n\nThen define an event generator:\n\n```crystal\nrequire \"onyx-event/channel/redis\"\nrequire \"./event\"\n\nchannel = Onyx::Event::Channel::Redis.new\n\nloop do\n  sleep(1)\n  channel.send(MyEvent.new(Time.now.to_s))\n  puts \"Sent MyEvent\"\nend\n```\n\n<p align=\"right\"><sup><code>generator.cr</code></sup></p>\n\nAnd a consumer:\n\n```crystal\nrequire \"onyx-event/channel/redis\"\nrequire \"./event\"\n\nchannel = Onyx::Event::Channel::Redis.new\n\nchannel.subscribe(MyEvent) do |event|\n  puts \"Got #{typeof(event)}: #{event.foo}\"\nend\n\nsleep\n```\n\n<p align=\"right\"><sup><code>consumer.cr</code></sup></p>\n\nThen launch the generator and arbitrary amount of consumers:\n\n```console\n$ crystal generator.cr\nSent MyEvent\nSent MyEvent\n```\n\n```console\n$ crystal consumer.cr\nGot MyEvent: 2019-01-09 17:20:10 +03:00\nGot MyEvent: 2019-01-09 17:20:11 +03:00\n```\n\n## Contributing\n\n1. Fork it (https://github.com/onyxframework/rest/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'feat: new feature'`) using [angular-style commits](https://docs.onyxframework.org/contributing/commit-style)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Licensing\n\nThis software is licensed under [BSD 3-Clause License](LICENSE).\n\n[![Open Source Initiative](https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Opensource.svg/100px-Opensource.svg.png)](https://opensource.org/licenses/BSD-3-Clause)\n","program":{"html_id":"github.com/onyxframework/event/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/onyxframework/event","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/event/Onyx","path":"Onyx.html","kind":"class","full_name":"Onyx","name":"Onyx","abstract":false,"superclass":{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/event/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-event.cr","line_number":4,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event.cr"},{"filename":"onyx-event/channel.cr","line_number":3,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr"},{"filename":"onyx-event/channel/memory.cr","line_number":3,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr"},{"filename":"onyx-event/channel/redis.cr","line_number":6,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Powerful framework for modern applications. See [onyxframework.org](https://onyxframework.org).","summary":"<p>Powerful framework for modern applications.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/event/Onyx/Event","path":"Onyx/Event.html","kind":"struct","full_name":"Onyx::Event","name":"Event","abstract":true,"superclass":{"html_id":"github.com/onyxframework/event/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/onyxframework/event/MessagePack/Serializable/Strict","kind":"module","full_name":"MessagePack::Serializable::Strict","name":"Strict"},{"html_id":"github.com/onyxframework/event/MessagePack/Serializable","kind":"module","full_name":"MessagePack::Serializable","name":"Serializable"},{"html_id":"github.com/onyxframework/event/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/onyxframework/event/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/onyxframework/event/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-event.cr","line_number":29,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event.cr"},{"filename":"onyx-event/channel.cr","line_number":4,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr"},{"filename":"onyx-event/channel/memory.cr","line_number":4,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr"},{"filename":"onyx-event/channel/redis.cr","line_number":7,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr"},{"filename":"onyx-event/channel/redis.cr","line_number":224,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/event/MessagePack/Serializable","kind":"module","full_name":"MessagePack::Serializable","name":"Serializable"},{"html_id":"github.com/onyxframework/event/MessagePack/Serializable/Strict","kind":"module","full_name":"MessagePack::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/event/Onyx","kind":"class","full_name":"Onyx","name":"Onyx"},"doc":"A basic event to inherit from.\n\nAccording to [Wikipedia](https://en.wikipedia.org/wiki/Event-driven_architecture#Event_flow_layers):\n\n> a significant temporal state or fact\n\nCode example:\n\n```\n# Abstract events are real.\nabstract struct AbstractEvent < Onyx::Event\nend\n\nstruct MyEvent < AbstractEvent\nend\n\nchannel.subscribe(AbstractEvent) { |event| puts \"Got AbstractEvent\" }\nchannel.subscribe(MyEvent) { |event| puts \"Got MyEvent\" }\n\nchannel.send(MyEvent.new)\n\n# Got AbstractEvent\n# Got MyEvent\n```","summary":"<p>A basic event to inherit from.</p>","class_methods":[{"id":"to_redis_key:String-class-method","html_id":"to_redis_key:String-class-method","name":"to_redis_key","doc":"Convert self class name to a Redis stream key.\nFor example, `\"Namespaced::FooEvent\"` turns into `\"namespaced-foo_event\"`.\n\nNOTE: Requires `Channel::Redis` to be required.","summary":"<p>Convert self class name to a Redis stream key.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L240","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L240","def":{"name":"to_redis_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{{ (@type.stringify.split(\"::\")).map(&.underscore).join('-') }}"}}],"constructors":[{"id":"new(pull:MessagePack::Unpacker)-class-method","html_id":"new(pull:MessagePack::Unpacker)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::MessagePack::Unpacker"}],"args_string":"(pull : MessagePack::Unpacker)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event.cr#L30","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event.cr#L30","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::MessagePack::Unpacker"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(pull, nil)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"redis_message_id-instance-method","html_id":"redis_message_id-instance-method","name":"redis_message_id","doc":"Return Redis stream message ID associated with this event.\n\nNOTE: Requires `Channel::Redis` to be required.","summary":"<p>Return Redis stream message ID associated with this event.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L231","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L231","def":{"name":"redis_message_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redis_message_id.not_nil!"}},{"id":"redis_message_id?:String?-instance-method","html_id":"redis_message_id?:String?-instance-method","name":"redis_message_id?","doc":"Return Redis stream message ID associated with this event.\n\nNOTE: Requires `Channel::Redis` to be required.","summary":"<p>Return Redis stream message ID associated with this event.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L231","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L231","def":{"name":"redis_message_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redis_message_id"}},{"id":"to_redis_key:String-instance-method","html_id":"to_redis_key:String-instance-method","name":"to_redis_key","doc":"See `.to_redis_key`.\n\nNOTE: Requires `Channel::Redis` to be required.","summary":"<p>See <code><a href=\"../Onyx/Event.html#to_redis_key%3AString-class-method\">.to_redis_key</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L247","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L247","def":{"name":"to_redis_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"self.class.to_redis_key"}}],"macros":[],"types":[{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","path":"Onyx/Event/Channel.html","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel","abstract":true,"superclass":{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/event/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-event/channel.cr","line_number":17,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr"},{"filename":"onyx-event/channel/memory.cr","line_number":5,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr"},{"filename":"onyx-event/channel/redis.cr","line_number":8,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel/Memory","kind":"class","full_name":"Onyx::Event::Channel::Memory","name":"Memory"},{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel/Redis","kind":"class","full_name":"Onyx::Event::Channel::Redis","name":"Redis"}],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/event/Onyx/Event","kind":"struct","full_name":"Onyx::Event","name":"Event"},"doc":"An abstract event channel.\n\nAccording to [Wikipedia](https://en.wikipedia.org/wiki/Event-driven_architecture#Event_channel):\n\n> An event channel is a mechanism of propagating the information collected\nfrom an event generator to the event engine ... The events are stored in a queue,\nwaiting to be processed later by the event processing engine.\n\nCurrently implemented channels: `Channel::Redis` and `Channel::Memory`.\n\nA channel usually begins its routines upon initialization in separate fibers,\nthus being non-blocking.","summary":"<p>An abstract event channel.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"send(event:Event)-instance-method","html_id":"send(event:Event)-instance-method","name":"send","doc":"Send *event* to this channel, triggering its subscribers.","summary":"<p>Send <em>event</em> to this channel, triggering its subscribers.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"}],"args_string":"(event : Event)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L19","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L19","def":{"name":"send","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"send(events:Enumerable(Event))-instance-method","html_id":"send(events:Enumerable(Event))-instance-method","name":"send","doc":"Send multiple *events* to this channel, triggering its subscribers.","summary":"<p>Send multiple <em>events</em> to this channel, triggering its subscribers.</p>","abstract":true,"args":[{"name":"events","doc":null,"default_value":"","external_name":"events","restriction":"Enumerable(Event)"}],"args_string":"(events : Enumerable(Event))","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L22","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L22","def":{"name":"send","args":[{"name":"events","doc":null,"default_value":"","external_name":"events","restriction":"Enumerable(Event)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"subscribe(event:T.class,&proc:Proc(T,Nil)):BoolforallT-instance-method","html_id":"subscribe(event:T.class,&amp;proc:Proc(T,Nil)):BoolforallT-instance-method","name":"subscribe","doc":"Subscribes *proc* to *event*.\nReturns `true` in case of success, i.e. it hasn't been already subscribed.\n\n```\nchannel.subscribe(MyEvent) do |event|\n  pp! typeof(event) # => MyEvent\nend\n```","summary":"<p>Subscribes <em>proc</em> to <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class, &proc : Proc(T, Nil)) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L32","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L32","def":{"name":"subscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, Nil)"},"return_type":"Bool","visibility":"Public","body":""}},{"id":"unsubscribe(event:T.class,&proc:Proc(T,Nil)):BoolforallT-instance-method","html_id":"unsubscribe(event:T.class,&amp;proc:Proc(T,Nil)):BoolforallT-instance-method","name":"unsubscribe","doc":"Unsubscribe a *proc* subscriber from *event*.\nReturns `false` if such a subscriber is not in the subscribers list\n(probably has already been unsubscribed or never been at all).\n\n```\nproc = ->(event : MyEvent) { puts \"Got MyEvent!\" }\n\nchannel.subscribe(MyEvent, &proc)   # => true\nchannel.subscribe(MyEvent, &proc)   # => false\nchannel.unsubscribe(MyEvent, &proc) # => true\nchannel.unsubscribe(MyEvent, &proc) # => false\n```","summary":"<p>Unsubscribe a <em>proc</em> subscriber from <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class, &proc : Proc(T, Nil)) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L61","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L61","def":{"name":"unsubscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, Nil)"},"return_type":"Bool","visibility":"Public","body":""}},{"id":"unsubscribe(event:T.class):BoolforallT-instance-method","html_id":"unsubscribe(event:T.class):BoolforallT-instance-method","name":"unsubscribe","doc":"Unsubscribe **all** subscribers from *event*.\nReturns `false` in case if there were no any subscribers to the event.\n\n```\nchannel.unsubscribe(MyEvent) # => true\n```","summary":"<p>Unsubscribe <strong>all</strong> subscribers from <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L86","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel.cr#L86","def":{"name":"unsubscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel/Memory","path":"Onyx/Event/Channel/Memory.html","kind":"class","full_name":"Onyx::Event::Channel::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel"},"ancestors":[{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel"},{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/event/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-event/channel/memory.cr","line_number":22,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel"},"doc":"A non-blocking in-memory `Event::Channel` implementation.\nIt relies on Crystal `::Channel`s.\n\n```\nrequire \"onyx-event/channel/memory\"\n\n# Subscriptions routine is spawned immediately\nchannel = Onyx::Event::Channel::Memory.new\n\nchannel.subscribe(MyEvent) do |event|\n  puts \"Got #{event}\"\nend\n\n# Don't forget to sleep, otherwise the process exits\nsleep\n```","summary":"<p>A non-blocking in-memory <code><a href=\"../../../Onyx/Event/Channel.html\">Event::Channel</a></code> implementation.</p>","class_methods":[],"constructors":[{"id":"new(channel:::Channel(Event)=::Channel(Event).new)-class-method","html_id":"new(channel:::Channel(Event)=::Channel(Event).new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"::Channel(Event).new","external_name":"channel","restriction":"::Channel(Event)"}],"args_string":"(channel : ::Channel(Event) = <span class=\"t\">::</span><span class=\"t\">Channel</span>(<span class=\"t\">Event</span>).<span class=\"k\">new</span>)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L26","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L26","def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"::Channel(Event).new","external_name":"channel","restriction":"::Channel(Event)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel:Channel(Onyx::Event)-instance-method","html_id":"channel:Channel(Onyx::Event)-instance-method","name":"channel","doc":"A Crystal `::Channel` associated with this event channel.","summary":"<p>A Crystal <code>::Channel</code> associated with this event channel.</p>","abstract":false,"args":[],"args_string":" : Channel(Onyx::Event)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L24","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L24","def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel"}},{"id":"send(event:Event)-instance-method","html_id":"send(event:Event)-instance-method","name":"send","doc":"Send the *event* to the `#channel`.","summary":"<p>Send the <em>event</em> to the <code><a href=\"../../../Onyx/Event/Channel/Memory.html#channel%3AChannel%28Onyx%3A%3AEvent%29-instance-method\">#channel</a></code>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"}],"args_string":"(event : Event)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L35","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L35","def":{"name":"send","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.send(event)"}},{"id":"send(events:Enumerable(Event))-instance-method","html_id":"send(events:Enumerable(Event))-instance-method","name":"send","doc":"Send multiple *events* to the `#channel`.","summary":"<p>Send multiple <em>events</em> to the <code><a href=\"../../../Onyx/Event/Channel/Memory.html#channel%3AChannel%28Onyx%3A%3AEvent%29-instance-method\">#channel</a></code>.</p>","abstract":false,"args":[{"name":"events","doc":null,"default_value":"","external_name":"events","restriction":"Enumerable(Event)"}],"args_string":"(events : Enumerable(Event))","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L40","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L40","def":{"name":"send","args":[{"name":"events","doc":null,"default_value":"","external_name":"events","restriction":"Enumerable(Event)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"events.each do |event|\n  @channel.send(event)\nend"}},{"id":"subscribe(event:T.class,&proc:Proc(T,Nil)):BoolforallT-instance-method","html_id":"subscribe(event:T.class,&amp;proc:Proc(T,Nil)):BoolforallT-instance-method","name":"subscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class, &proc : Proc(T, Nil)) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L46","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L46","def":{"name":"subscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, Nil)"},"return_type":"Bool","visibility":"Public","body":"_subscribe(event, &proc)"}},{"id":"unsubscribe(event:T.class,&proc:Proc(T,Nil)):BoolforallT-instance-method","html_id":"unsubscribe(event:T.class,&amp;proc:Proc(T,Nil)):BoolforallT-instance-method","name":"unsubscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class, &proc : Proc(T, Nil)) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L50","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L50","def":{"name":"unsubscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, Nil)"},"return_type":"Bool","visibility":"Public","body":"_unsubscribe(event, &proc)"}},{"id":"unsubscribe(event:T.class):BoolforallT-instance-method","html_id":"unsubscribe(event:T.class):BoolforallT-instance-method","name":"unsubscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L54","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/memory.cr#L54","def":{"name":"unsubscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"_unsubscribe(event)"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel/Redis","path":"Onyx/Event/Channel/Redis.html","kind":"class","full_name":"Onyx::Event::Channel::Redis","name":"Redis","abstract":false,"superclass":{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel"},"ancestors":[{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel"},{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/event/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-event/channel/redis.cr","line_number":30,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/event/Onyx/Event/Channel","kind":"class","full_name":"Onyx::Event::Channel","name":"Channel"},"doc":"A non-blocking `::Redis` `Event::Channel` implementation.\nIt relies on [Redis Streams](https://redis.io/topics/streams-intro).\n\nIt creates two `::Redis` clients on initilization.\n\n```\nrequire \"onyx-event/channel/redis\"\n\n# Subscriptions routine is spawned immediately\nchannel = Onyx::Event::Channel::Redis.new(\n  redis_proc: ->{ Redis.new(url: ENV[\"REDIS_URL\"]) },\n  namespace: \"custom-namespace\"\n)\n\nchannel.subscribe(MyEvent) do |event|\n  puts \"Got #{event}\"\nend\n\n# Don't forget to sleep, otherwise the process exits\nsleep\n```","summary":"<p>A non-blocking <code><a href=\"../../../Redis.html\">::Redis</a></code> <code><a href=\"../../../Onyx/Event/Channel.html\">Event::Channel</a></code> implementation.</p>","class_methods":[],"constructors":[{"id":"new(redis_proc:Proc(::Redis)=->do\n::Redis.new\nend,namespace:String=&quot;onyx-event&quot;,*,batch:Int=10)-class-method","html_id":"new(redis_proc:Proc(::Redis)=-&gt;do\n::Redis.new\nend,namespace:String=&amp;quot;onyx-event&amp;quot;,*,batch:Int=10)-class-method","name":"new","doc":"Initialize a new Redis channel with *redis_proc* to\ninitialize two new `::Redis` clients and also Redis *namespace*.\n\n* *batch* option defines how many messages to grab from an event stream per `XREAD`.","summary":"<p>Initialize a new Redis channel with <em>redis_proc</em> to initialize two new <code><a href=\"../../../Redis.html\">::Redis</a></code> clients and also Redis <em>namespace</em>.</p>","abstract":false,"args":[{"name":"redis_proc","doc":null,"default_value":"-> do\n  ::Redis.new\nend","external_name":"redis_proc","restriction":"Proc(::Redis)"},{"name":"namespace","doc":null,"default_value":"\"onyx-event\"","external_name":"namespace","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"batch","doc":null,"default_value":"10","external_name":"batch","restriction":"Int"}],"args_string":"(redis_proc : Proc(::Redis) = -> <span class=\"k\">do</span>\n  <span class=\"t\">::</span><span class=\"t\">Redis</span>.<span class=\"k\">new</span>\n<span class=\"k\">end</span>, namespace : String = <span class=\"s\">&quot;onyx-event&quot;</span>, *, batch : Int = <span class=\"n\">10</span>)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L35","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L35","def":{"name":"new","args":[{"name":"redis_proc","doc":null,"default_value":"-> do\n  ::Redis.new\nend","external_name":"redis_proc","restriction":"Proc(::Redis)"},{"name":"namespace","doc":null,"default_value":"\"onyx-event\"","external_name":"namespace","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"batch","doc":null,"default_value":"10","external_name":"batch","restriction":"Int"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(redis_proc, namespace, batch: batch)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"send(event:Event,client=@sidekick)-instance-method","html_id":"send(event:Event,client=@sidekick)-instance-method","name":"send","doc":"Add the *event* to the Redis stream using `::Redis::Commands#xadd`.","summary":"<p>Add the <em>event</em> to the Redis stream using <code><a href=\"../../../Redis/Commands.html\">::Redis::Commands</a>#xadd</code>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"},{"name":"client","doc":null,"default_value":"@sidekick","external_name":"client","restriction":""}],"args_string":"(event : Event, client = @sidekick)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L54","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L54","def":{"name":"send","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"},{"name":"client","doc":null,"default_value":"@sidekick","external_name":"client","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"client.xadd(\"#{@namespace}:#{event.to_redis_key}\", '*', \"arg\", String.new(event.to_msgpack))"}},{"id":"send(events:Enumerable(Event))-instance-method","html_id":"send(events:Enumerable(Event))-instance-method","name":"send","doc":"Add multiple *events* to the Redis stream using `::Redis::Commands#xadd`.\nThis method uses [pipelining](http://stefanwille.github.io/crystal-redis/Redis/PipelineApi.html) for improved performance.","summary":"<p>Add multiple <em>events</em> to the Redis stream using <code><a href=\"../../../Redis/Commands.html\">::Redis::Commands</a>#xadd</code>.</p>","abstract":false,"args":[{"name":"events","doc":null,"default_value":"","external_name":"events","restriction":"Enumerable(Event)"}],"args_string":"(events : Enumerable(Event))","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L65","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L65","def":{"name":"send","args":[{"name":"events","doc":null,"default_value":"","external_name":"events","restriction":"Enumerable(Event)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sidekick.pipelined do |pipe|\n  events.each do |event|\n    send(event, pipe)\n  end\nend"}},{"id":"subscribe(event:T.class,&proc:Proc(T,Nil)):NilforallT-instance-method","html_id":"subscribe(event:T.class,&amp;proc:Proc(T,Nil)):NilforallT-instance-method","name":"subscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class, &proc : Proc(T, Nil)) : Nil forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L73","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L73","def":{"name":"subscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, Nil)"},"return_type":"Nil","visibility":"Public","body":"break_subscribe_routine?(events_to_subscribe_size, _subscribe(event, &proc))"}},{"id":"unsubscribe(event:T.class,&proc:Proc(T,Nil)):BoolforallT-instance-method","html_id":"unsubscribe(event:T.class,&amp;proc:Proc(T,Nil)):BoolforallT-instance-method","name":"unsubscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class, &proc : Proc(T, Nil)) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L77","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L77","def":{"name":"unsubscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, Nil)"},"return_type":"Bool","visibility":"Public","body":"break_subscribe_routine?(events_to_subscribe_size, _unsubscribe(event, &proc))"}},{"id":"unsubscribe(event:T.class):BoolforallT-instance-method","html_id":"unsubscribe(event:T.class):BoolforallT-instance-method","name":"unsubscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"args_string":"(event : T.class) : Bool forall T","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L81","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/channel/redis.cr#L81","def":{"name":"unsubscribe","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"break_subscribe_routine?(events_to_subscribe_size, _unsubscribe(event))"}}],"macros":[],"types":[]}]}]}]},{"html_id":"github.com/onyxframework/event/Redis","path":"Redis.html","kind":"class","full_name":"Redis","name":"Redis","abstract":false,"superclass":{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/event/Redis/CommandExecution/ValueOriented","kind":"module","full_name":"Redis::CommandExecution::ValueOriented","name":"ValueOriented"},{"html_id":"github.com/onyxframework/event/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"},{"html_id":"github.com/onyxframework/event/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/event/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/redis/src/redis/commands.cr","line_number":1,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/lib/redis/src/redis/commands.cr"},{"filename":"lib/redis/src/redis/command_execution/value_oriented.cr","line_number":1,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/lib/redis/src/redis/command_execution/value_oriented.cr"},{"filename":"lib/redis/src/redis.cr","line_number":37,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/lib/redis/src/redis.cr"},{"filename":"lib/redis/src/redis/command_execution/future_oriented.cr","line_number":1,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/lib/redis/src/redis/command_execution/future_oriented.cr"},{"filename":"lib/redis/src/redis/strategy/base.cr","line_number":1,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/lib/redis/src/redis/strategy/base.cr"},{"filename":"onyx-event/ext/redis/commands.cr","line_number":3,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/event/Redis/CommandExecution/ValueOriented","kind":"module","full_name":"Redis::CommandExecution::ValueOriented","name":"ValueOriented"},{"html_id":"github.com/onyxframework/event/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Extensions to the original [Redis Client](https://github.com/stefanwille/crystal-redis),\nwhich is authored by [Stefan Wille](https://github.com/stefanwille).","summary":"<p>Extensions to the original <a href=\"https://github.com/stefanwille/crystal-redis\" target=\"_blank\">Redis Client</a>, which is authored by <a href=\"https://github.com/stefanwille\" target=\"_blank\">Stefan Wille</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/event/Redis/Commands","path":"Redis/Commands.html","kind":"module","full_name":"Redis::Commands","name":"Commands","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/redis/src/redis/commands.cr","line_number":4,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/lib/redis/src/redis/commands.cr"},{"filename":"onyx-event/ext/redis/commands.cr","line_number":5,"url":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr"}],"repository_name":"github.com/onyxframework/event","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/onyxframework/event/Redis","kind":"class","full_name":"Redis","name":"Redis"}],"namespace":{"html_id":"github.com/onyxframework/event/Redis","kind":"class","full_name":"Redis","name":"Redis"},"doc":"Extensions to the original [Redis Client](https://github.com/stefanwille/crystal-redis) commands.","summary":"<p>Extensions to the original <a href=\"https://github.com/stefanwille/crystal-redis\" target=\"_blank\">Redis Client</a> commands.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"client_id-instance-method","html_id":"client_id-instance-method","name":"client_id","doc":"Return the client ID for the current connection.\nSee [https://redis.io/commands/client-id](https://redis.io/commands/client-id).","summary":"<p>Return the client ID for the current connection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L8","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L8","def":{"name":"client_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"integer_command([\"CLIENT\", \"ID\"])"}},{"id":"client_setname(name:String)-instance-method","html_id":"client_setname(name:String)-instance-method","name":"client_setname","doc":"Set the current connection name.\nSee [https://redis.io/commands/client-setname](https://redis.io/commands/client-setname).","summary":"<p>Set the current connection name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L14","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L14","def":{"name":"client_setname","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(string_command([\"CLIENT\", \"SETNAME\", name])) == \"OK\""}},{"id":"client_unblock(id:Int,errorerror?:Bool=false)-instance-method","html_id":"client_unblock(id:Int,errorerror?:Bool=false)-instance-method","name":"client_unblock","doc":"Unblock a client blocked in a blocking command from a different connection.\nSee [https://redis.io/commands/client-unblock](https://redis.io/commands/client-unblock).","summary":"<p>Unblock a client blocked in a blocking command from a different connection.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int"},{"name":"error?","doc":null,"default_value":"false","external_name":"error","restriction":"Bool"}],"args_string":"(id : Int, error error? : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L20","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L20","def":{"name":"client_unblock","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int"},{"name":"error?","doc":null,"default_value":"false","external_name":"error","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"commands = [\"CLIENT\", \"UNBLOCK\", id.to_s]\nif error = error?\n  commands << \"ERROR\"\nend\ninteger_command(commands)\n"}},{"id":"xadd(key:String,id:String|Char,*values:String)-instance-method","html_id":"xadd(key:String,id:String|Char,*values:String)-instance-method","name":"xadd","doc":"Appends a new entry to a stream.\nSee [https://redis.io/commands/xadd](https://redis.io/commands/xadd).","summary":"<p>Appends a new entry to a stream.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String | Char"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"String"}],"args_string":"(key : String, id : String | Char, *values : String)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L32","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L32","def":{"name":"xadd","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String | Char"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"String"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"string_command([\"XADD\", key, id.to_s] + values.to_a)"}},{"id":"xread(streams:Enumerable(String),id:Enumerable(String),count:Int?=nil,block:Int?=nil)-instance-method","html_id":"xread(streams:Enumerable(String),id:Enumerable(String),count:Int?=nil,block:Int?=nil)-instance-method","name":"xread","doc":"Return never seen elements in multiple streams,\nwith IDs greater than the ones reported by the caller for each stream. Can block.\nSee [https://redis.io/commands/xread](https://redis.io/commands/xread).","summary":"<p>Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream.</p>","abstract":false,"args":[{"name":"streams","doc":null,"default_value":"","external_name":"streams","restriction":"Enumerable(String)"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Enumerable(String)"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | ::Nil"},{"name":"block","doc":null,"default_value":"nil","external_name":"block","restriction":"Int | ::Nil"}],"args_string":"(streams : Enumerable(String), id : Enumerable(String), count : Int? = <span class=\"n\">nil</span>, block : Int? = <span class=\"n\">nil</span>)","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L39","source_link":"https://github.com/onyxframework/event/blob/1dce4c8f70f67d1a8de91856ebb6015b10cc6b88/src/onyx-event/ext/redis/commands.cr#L39","def":{"name":"xread","args":[{"name":"streams","doc":null,"default_value":"","external_name":"streams","restriction":"Enumerable(String)"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Enumerable(String)"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | ::Nil"},{"name":"block","doc":null,"default_value":"nil","external_name":"block","restriction":"Int | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"commands = [\"XREAD\"]\nif count\n  commands = commands + [\"COUNT\", count.to_s]\nend\nif block\n  commands = commands + [\"BLOCK\", block.to_s]\nend\ncommands << \"STREAMS\"\ncommands = commands + streams.to_a\ncommands = commands + id.to_a\narray_or_nil_command(commands)\n"}}],"macros":[],"types":[]}]}]}})